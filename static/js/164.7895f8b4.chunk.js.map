{"version":3,"file":"static/js/164.7895f8b4.chunk.js","mappings":"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","sources":["components/service/tmdb.js","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '6e0255c07ab0a5172ae69937101051b4';\nconst BASE_URL = 'http://api.themoviedb.org/3/';\nconst TREND_LIST = '/trending/movie/day';\nconst MOVIE_BY_ID = '/movie/';\nconst SEARCH_INPUT = '/search/movie';\nconst MOVIE_INF = '/movie/';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport async function getTrendList() {\n  const { data } = await axios.get(`${TREND_LIST}?api_key=${API_KEY}`);\n  return data;\n}\n\nexport async function getFilmByID(id) {\n  const { data } = await axios.get(`${MOVIE_BY_ID}/${id}?api_key=${API_KEY}`);\n  return data;\n}\n\nexport async function getCast(id) {\n  const { data } = await axios.get(\n    `${MOVIE_INF}${id}/credits?api_key=${API_KEY}`\n  );\n  return data;\n}\n\nexport async function getReviews(id) {\n  const { data } = await axios.get(\n    `${MOVIE_INF}${id}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n}\n\nexport async function getSearchFilm(query) {\n  const { data } = await axios.get(\n    `${SEARCH_INPUT}?api_key=${API_KEY}&query=${query}`\n  );\n  return data;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"film__backBtn\":\"MovieDetails_film__backBtn__H4MHB\",\"film__img\":\"MovieDetails_film__img__cQAkE\",\"film__card\":\"MovieDetails_film__card__bvUBe\",\"film__info\":\"MovieDetails_film__info__xiqW2\",\"film__title\":\"MovieDetails_film__title__8+wvn\",\"film__score\":\"MovieDetails_film__score__BC4Jf\",\"film__overview\":\"MovieDetails_film__overview__LgU16\",\"genres\":\"MovieDetails_genres__Pnmgt\",\"film__text\":\"MovieDetails_film__text__wfCmU\",\"genres__list\":\"MovieDetails_genres__list__L-uh5\",\"info__title\":\"MovieDetails_info__title__cEYcj\",\"info__box\":\"MovieDetails_info__box__Tmtog\",\"info__submenu\":\"MovieDetails_info__submenu__dLtko\"};","import React, { Suspense, useEffect, useRef, useState } from 'react';\nimport {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport * as APIfilms from 'components/service/tmdb';\nimport no_pic from '../../images/no_film_img.png';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState({});\n  const [movieGenres, setMovieGenres] = useState([]);\n  const [err, setErr] = useState('');\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from || '/movies');\n\n  useEffect(() => {\n    APIfilms.getFilmByID(movieId)\n      .then(results => {\n        setMovieInfo(results);\n        setMovieGenres(results.genres);\n      })\n      .catch(err => setErr(err.message));\n    setErr('');\n  }, [movieId]);\n  const { title, poster_path, overview, vote_average, release_date } =\n    movieInfo;\n\n  return (\n    <div>\n      {err && <span>Sorry. {err} ðŸ˜­ Please, try again later</span>}\n      <Link to={backLinkRef.current} className={css.film__backBtn}>\n        &#10229; Back\n      </Link>\n      <div className={css.film__card}>\n        <img\n          className={css.film__img}\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w200/${poster_path}`\n              : no_pic\n          }\n          alt={`${title}`}\n        />\n        <div className={css.film__info}>\n          <h2 className={css.film__title}>\n            {' '}\n            {title} ({release_date?.substr(0, 4)})\n          </h2>\n          <p className={css.film__score}>\n            User score: {Math.round(vote_average * 10) + `%`}\n          </p>\n          <h3 className={css.film__overview}>Overview</h3>\n          <p className={css.film__text}>\n            {overview ? overview : 'Sorry, no overview about this film'}\n          </p>\n          <h3 className={css.genres}>Genres</h3>\n          <div className={css.genres__list}>\n            {movieGenres.length > 0\n              ? movieGenres.map(genre => <p key={genre.id}>{genre.name}</p>)\n              : 'Sorry, no info about genres'}\n          </div>\n        </div>\n      </div>\n      <div className={css.info__box}>\n        <h2 className={css.info__title}>Additional Information</h2>\n        <ul>\n          <li className={css.info__submenu}>\n            <NavLink to=\"cast\">Cast</NavLink>\n          </li>\n          <li className={css.info__submenu}>\n            <NavLink to=\"reviews\">Reviews</NavLink>\n          </li>\n        </ul>\n      </div>\n      <Suspense fallback={<div>Loading....</div>}>\n        <Outlet />\n      </Suspense>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","TREND_LIST","MOVIE_BY_ID","SEARCH_INPUT","MOVIE_INF","getTrendList","axios","data","getFilmByID","id","getCast","getReviews","getSearchFilm","query","movieId","useParams","useState","movieInfo","setMovieInfo","movieGenres","setMovieGenres","err","setErr","location","useLocation","backLinkRef","useRef","state","from","useEffect","APIfilms","then","results","genres","catch","message","title","poster_path","overview","vote_average","release_date","to","current","className","css","src","no_pic","alt","substr","Math","round","length","map","genre","name","Suspense","fallback"],"sourceRoot":""}