{"version":3,"file":"static/js/168.78cf7bbd.chunk.js","mappings":"2NACA,EAA+B,8BAA/B,EAA6E,+BAA7E,EAA4H,+B,SCgC5H,EA5BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwCE,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAoBN,GACjBO,MAAK,SAAAC,GAAI,OAAIJ,EAAgBI,EAAKC,QAAzB,IACTC,OAAM,kBAAMC,OAAOC,MAAM,yCAAnB,GACV,GAAE,CAACZ,KAGF,gBAAKa,UAAWC,EAAhB,SACGX,EAAaY,OAAS,GACrB,wBACGZ,EAAaa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OAChB,2BACE,gBAAIN,UAAWC,EAAf,UAAkC,WAASI,MAC3C,cAAGL,UAAWC,EAAd,SAAkCK,MAF3BF,EADO,OAQpB,uBAAG,+CAIV,C,+LC7BKG,EAAU,mCAEVC,EAAa,sBACbC,EAAc,UACdC,EAAe,gBACfC,EAAY,UAIX,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,EAAAA,IAAA,UAAaL,EAAb,oBAAmCD,IADrD,uBACGZ,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAemB,EAAtB,+CAAO,OAAP,oBAAO,WAA2BV,GAA3B,yFACkBS,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,YAA4BL,EAA5B,oBAA0CG,IAD5D,uBACGZ,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeoB,EAAtB,+CAAO,OAAP,oBAAO,WAAuBX,GAAvB,yFACkBS,EAAAA,EAAAA,IAAA,UAClBF,GADkB,OACNP,EADM,4BACgBG,IAFlC,uBACGZ,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeqB,EAAtB,+CAAO,OAAP,oBAAO,WAA0BZ,GAA1B,yFACkBS,EAAAA,EAAAA,IAAA,UAClBF,GADkB,OACNP,EADM,4BACgBG,IAFlC,uBACGZ,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAesB,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,yFACkBL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACMH,EADN,kBACuBW,IAFzC,uBACGvB,EADH,EACGA,KADH,kBAIEA,GAJF,kEA1BPkB,EAAAA,EAAAA,SAAAA,QANiB,+B","sources":["webpack://goit-react-hw-05-movies/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","components/service/tmdb.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviews__box\":\"Reviews_reviews__box__lB7vt\",\"reviews__name\":\"Reviews_reviews__name__R-07q\",\"reviews__text\":\"Reviews_reviews__text__Y-Cmq\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as APIfilms from 'components/service/tmdb';\nimport css from './Reviews.module.css';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [movieReviews, setMovieReviews] = useState([]);\n\n  useEffect(() => {\n    APIfilms.getReviews(movieId)\n      .then(data => setMovieReviews(data.results))\n      .catch(() => window.alert('Network Error. Please, try again later'));\n  }, [movieId]);\n\n  return (\n    <div className={css.reviews__box}>\n      {movieReviews.length > 0 ? (\n        <ul>\n          {movieReviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h3 className={css.reviews__name}>Author: {author}</h3>\n              <p className={css.reviews__text}>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '6e0255c07ab0a5172ae69937101051b4';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst TREND_LIST = '/trending/movie/day';\nconst MOVIE_BY_ID = '/movie/';\nconst SEARCH_INPUT = '/search/movie';\nconst MOVIE_INF = '/movie/';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport async function getTrendList() {\n  const { data } = await axios.get(`${TREND_LIST}?api_key=${API_KEY}`);\n  return data;\n}\n\nexport async function getFilmByID(id) {\n  const { data } = await axios.get(`${MOVIE_BY_ID}/${id}?api_key=${API_KEY}`);\n  return data;\n}\n\nexport async function getCast(id) {\n  const { data } = await axios.get(\n    `${MOVIE_INF}${id}/credits?api_key=${API_KEY}`\n  );\n  return data;\n}\n\nexport async function getReviews(id) {\n  const { data } = await axios.get(\n    `${MOVIE_INF}${id}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n}\n\nexport async function getSearchFilm(query) {\n  const { data } = await axios.get(\n    `${SEARCH_INPUT}?api_key=${API_KEY}&query=${query}`\n  );\n  return data;\n}\n"],"names":["movieId","useParams","useState","movieReviews","setMovieReviews","useEffect","APIfilms","then","data","results","catch","window","alert","className","css","length","map","id","author","content","API_KEY","TREND_LIST","MOVIE_BY_ID","SEARCH_INPUT","MOVIE_INF","getTrendList","axios","getFilmByID","getCast","getReviews","getSearchFilm","query"],"sourceRoot":""}