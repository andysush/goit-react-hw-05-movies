{"version":3,"file":"static/js/785.61fa8ed3.chunk.js","mappings":"2NACA,EAA4B,wBAA5B,EAAiE,yBAAjE,EAAsG,wBAAtG,EAA2I,yB,SC+C3I,EA1Ca,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAoCE,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAsBF,EAAAA,EAAAA,UAAS,IAA/B,eAAOG,EAAP,KAAYC,EAAZ,KASA,OAPAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAiBR,GACdS,MAAK,SAAAC,GAAI,OAAIN,EAAcM,EAAKC,KAAvB,IACTC,OAAM,SAAAP,GAAG,OAAIC,EAAOD,EAAIQ,QAAf,IACZP,EAAO,GACR,GAAE,CAACN,KAGF,qBAASc,UAAWC,EAApB,UACGV,IAAO,sCAAcA,EAAd,4CACR,wBACGF,EAAWa,OAAS,EACnBb,EAAWc,KAAI,gBAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,GAAIC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACb,gBAAaP,UAAWC,EAAxB,WACE,gBACED,UAAWC,EACXO,MAAO,GACPC,OAAQ,GACRC,IACEJ,EAAY,0CAC2BA,G,y4DAGzCK,IAAKP,KAEP,cAAGJ,UAAWC,EAAd,SAA+BG,KAC/B,eAAGJ,UAAWC,EAAd,wBAA0CM,OAbnCF,EADI,KAkBf,+EAKT,C,+LC5CKO,EAAU,mCAEVC,EAAa,sBACbC,EAAc,UACdC,EAAe,gBACfC,EAAY,UAIX,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,EAAAA,IAAA,UAAaL,EAAb,oBAAmCD,IADrD,uBACGhB,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeuB,EAAtB,+CAAO,OAAP,oBAAO,WAA2Bd,GAA3B,yFACkBa,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,YAA4BT,EAA5B,oBAA0CO,IAD5D,uBACGhB,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAewB,EAAtB,+CAAO,OAAP,oBAAO,WAAuBf,GAAvB,yFACkBa,EAAAA,EAAAA,IAAA,UAClBF,GADkB,OACNX,EADM,4BACgBO,IAFlC,uBACGhB,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeyB,EAAtB,+CAAO,OAAP,oBAAO,WAA0BhB,GAA1B,yFACkBa,EAAAA,EAAAA,IAAA,UAClBF,GADkB,OACNX,EADM,4BACgBO,IAFlC,uBACGhB,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAe0B,EAAtB,+CAAO,OAAP,oBAAO,WAA6BC,GAA7B,yFACkBL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,oBACMH,EADN,kBACuBW,IAFzC,uBACG3B,EADH,EACGA,KADH,kBAIEA,GAJF,kEA1BPsB,EAAAA,EAAAA,SAAAA,QANiB,8B","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","components/service/tmdb.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast__box\":\"Cast_cast__box__CBUcA\",\"cast__item\":\"Cast_cast__item__UfPEI\",\"cast__img\":\"Cast_cast__img__IB6ux\",\"cast__text\":\"Cast_cast__text__rZB6U\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as APIfilms from 'components/service/tmdb';\nimport noPhoto from '../../images/no_photo.png';\nimport css from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [movieCasts, setMovieCasts] = useState([]);\n  const [err, setErr] = useState('');\n\n  useEffect(() => {\n    APIfilms.getCast(movieId)\n      .then(data => setMovieCasts(data.cast))\n      .catch(err => setErr(err.message));\n    setErr('');\n  }, [movieId]);\n\n  return (\n    <section className={css.cast__box}>\n      {err && <span>Sorry. {err} ðŸ˜­ Please, try again later</span>}\n      <ul>\n        {movieCasts.length > 0 ? (\n          movieCasts.map(({ name, id, profile_path, character }) => (\n            <li key={id} className={css.cast__item}>\n              <img\n                className={css.cast__img}\n                width={50}\n                height={75}\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w500/${profile_path}`\n                    : noPhoto\n                }\n                alt={name}\n              />\n              <p className={css.cast__text}>{name}</p>\n              <p className={css.cast__text}>Character: {character}</p>\n            </li>\n          ))\n        ) : (\n          <p>We don't have info about actors for this movie.</p>\n        )}\n      </ul>\n    </section>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '6e0255c07ab0a5172ae69937101051b4';\nconst BASE_URL = 'http://api.themoviedb.org/3/';\nconst TREND_LIST = '/trending/movie/day';\nconst MOVIE_BY_ID = '/movie/';\nconst SEARCH_INPUT = '/search/movie';\nconst MOVIE_INF = '/movie/';\n\naxios.defaults.baseURL = BASE_URL;\n\nexport async function getTrendList() {\n  const { data } = await axios.get(`${TREND_LIST}?api_key=${API_KEY}`);\n  return data;\n}\n\nexport async function getFilmByID(id) {\n  const { data } = await axios.get(`${MOVIE_BY_ID}/${id}?api_key=${API_KEY}`);\n  return data;\n}\n\nexport async function getCast(id) {\n  const { data } = await axios.get(\n    `${MOVIE_INF}${id}/credits?api_key=${API_KEY}`\n  );\n  return data;\n}\n\nexport async function getReviews(id) {\n  const { data } = await axios.get(\n    `${MOVIE_INF}${id}/reviews?api_key=${API_KEY}`\n  );\n  return data;\n}\n\nexport async function getSearchFilm(query) {\n  const { data } = await axios.get(\n    `${SEARCH_INPUT}?api_key=${API_KEY}&query=${query}`\n  );\n  return data;\n}\n"],"names":["movieId","useParams","useState","movieCasts","setMovieCasts","err","setErr","useEffect","APIfilms","then","data","cast","catch","message","className","css","length","map","name","id","profile_path","character","width","height","src","alt","API_KEY","TREND_LIST","MOVIE_BY_ID","SEARCH_INPUT","MOVIE_INF","getTrendList","axios","getFilmByID","getCast","getReviews","getSearchFilm","query"],"sourceRoot":""}